server:
  port: ${app.port}

spring:
  cloud:
    stream:
      bindings:
        like-out-0:
          destination: movies-topic
          content-type: application/json
          binder: rabbit
      rabbit:
        bindings:
          like-out-0:
            producer:
              routing-key-expression: headers.myRoutingKey
    discovery:
      enabled: true
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${app.postgres.host}:${app.postgres.port}/${app.postgres.database}
    username: ${app.postgres.username}
    password: ${app.postgres.password}
  flyway:
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration
    sql-migration-prefix: V
    table: schema_version
    schemas: ${app.postgres.schema}
    init-sqls: CREATE SCHEMA IF NOT EXISTS ${app.postgres.schema};
    fail-on-missing-locations: true
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: ${app.postgres.schema}
  rabbitmq:
    username: ${app.rabbitmq.username}
    password: ${app.rabbitmq.password}
    host: ${app.rabbitmq.host}
    port: ${app.rabbitmq.port}
    virtual-host: ${app.rabbitmq.virtual-host}

#Swagger properties
springdoc:
  swagger-ui:
    path: /
    enabled: ${app.allow-swagger}
  api-docs:
    path: /v3/api-docs
    enabled: ${app.allow-swagger}

#App properties
app:
  security:
    ignore-paths: /swagger/**,/v3/api-docs/**
